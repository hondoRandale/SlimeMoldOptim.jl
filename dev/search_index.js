var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SlimeMoldOptim","category":"page"},{"location":"#SlimeMoldOptim","page":"Home","title":"SlimeMoldOptim","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SlimeMoldOptim.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SlimeMoldOptim]","category":"page"},{"location":"#SlimeMoldOptim.slimeMoldAlgo-Tuple{Int64, Int64, Vararg{Any, N} where N}","page":"Home","title":"SlimeMoldOptim.slimeMoldAlgo","text":"     slimeMoldAlgo( nMolds::Int,\n                    n_vc::Int,\n                    kwargs...;\n                    lower::Vector{Float32},\n                    upper::Vector{Float32},\n                    objFunction::Function,\n                    maxiter::Int,\n                    ϵ_conv::Float32,\n                    z::Float32=0.03f0 )\n\n\n  minimize objective function objFunction, the solution space is limited by lower and upper bound.\n  - The optimization algorithm utilized is the slime mold algorithm.\n  - The nMolds parameter governs the number of molds being modeled.\n  - n_vc is the number of steps learning parameter vb needs to reach 0.0.\n  - maxiter denotes the overall number of algo iteraions, it has to be >= n_vc.\n\n  the number of sparks per firework, in remains constant foreach firework. ϵ_A is the smoothing parameter\n  controlling the variance of amplitudes computed foreach fw. C_a ist the upscaling parameter for explosion\n  amplitudes. C_r is the downscaling parameter for explosion amplitudes. XPrimary is the feature set of the\n  primary algorithm to be tuned. yPrimary is the target set of the primary algorithm. maxiter is the maximum\n  number iteraions.  ϵ_conv denotes the convergence parameter.\n\n\n\n\n\n","category":"method"}]
}
